====================================METODOS============================================

Todas as açoes das aplicações são consideradas métodos, sendo definidos por atributos
e métodos. Já vimos que atrinutos sãp, em grande maioria, variáveis de diferentes tipos
e valores. Os métodos por sua vez, correspondem a funções ou sub-rotinas disponíveis
dentro de nossas classes.

Nomeações de um método:

*Deve ser nomeado como verbo, Seguir o padão de camelCase.
*Em java os metodos devem ser definidos dentro de uma classe.

Criterios para deficão de um método

1- Qual a proposta inicial de método? Voce deve ser perguntat constatemente até
compreender a real finalidade do mesmo.

2- Qual o tipo de retorno esperado após executar o metodo? Vc deve analizar se método 
é responsável por retornar algum valor ou não.

3- Qual é a visibiladade do método? Avaliar se será necessário que método seja visível
a toda aplicação, somente em pacotes, através da herança ou somente a nível a própria
classe.


=======================================ESCOPO=========================================

Pode ser entendido como o ambiente com o ambiente onde uma veriável pode ser acessada.
Em java, o escopo das variáveis vai de acordo com o bloco onde ela foi declarada.
A variável é criada no primeiro acesso a ela, se tornando inacessivel após o interpre-
tador sair do bloco de execução.
Em uma classe, podemos visualizar a diferença de escopos. Atributos e variáveis.

===============================PALAVRAS RESERVADAS===================================

Todas as palavras são classificas em grupos e escritas com letras minúsciluas, sendo
identificadas com uma cor especial pela, maioria das ide's.

Controle de pacotes: 
	Import: Importa pacotes ou classes.
	Packeage: Especifica que pacote, todas as classes

Modificadores de acesso:
	Public: Acesso a todos.
	Private: Acesso apenas dentro da classe.
	Protected: Acesso por classes no mesmo pacote e subclasses.

Primitivos: Boolean, byte, int float, long short, void,

Modificadores de classes, variáveis ou métodos:

Abstract, class, extends, final, implements, interface, new, static, synchronized etc.

Controle de fluxo: 
Brack, case, continue, default, do, else, for, if, instanceof, return, swich, while.

Tratamentos de erros:
Assert, catch, finally, throw, throws, try.

Variáveis de referencia:

Super: Refere-se a superclasse imediata.
this: Refere-se a instancia atual do objeto.


Escopo de uso

aquivo > packege, import, static
Class > Public, private, abstract, extends, static, void, return > private,final, abstratic
Metodo > Public, private, abstract, extends, static, void, return > void ou return
Atributo > public, protected, private, static, final, tipo primitivo > ****


=========================================JAVA DOC=====================================

É a documentação da ferramenta java

OBRIGAÇÃO LER A DOCUMENTAÇÃO







